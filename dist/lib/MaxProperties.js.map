{"version":3,"sources":["lib/MaxProperties.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;8BAA0B,iBAAiB;;;;IAEtB,aAAa;YAAb,aAAa;;AACrB,WADQ,aAAa,CACpB,KAAK,EAAE;0BADA,aAAa;;AAE9B,+BAFiB,aAAa,6CAEtB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;GACzB;;eAJkB,aAAa;;WAkB5B,cAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,aAAO,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;AACnC,aAAO,OAAO,CAAC;KAChB;;;SAhBQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,kBAAiB,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;AACzC,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAA;OACvE;KACF;;;SAhBkB,aAAa;;;qBAAb,aAAa","file":"lib/MaxProperties.js","sourcesContent":["import ObjectKeyword from './ObjectKeyword';\n\nexport default class MaxProperties extends ObjectKeyword {\n  constructor(value) {\n    super();\n    this.value = value || 0;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (Number.isInteger(value) && value >= 0) {\n      this._value = value;\n    } else {\n      throw new Error('value must be an integer greater than or equal to 0')\n    }\n  }\n\n  json(context) {\n    context = context || {};\n    context.maxProperties = this.value;\n    return context;\n  }\n}\n"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}