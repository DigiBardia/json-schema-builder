{"version":3,"sources":["lib/MaxLength.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;8BAA0B,iBAAiB;;;;IAEtB,SAAS;YAAT,SAAS;;AACjB,WADQ,SAAS,CAChB,KAAK,EAAE;0BADA,SAAS;;AAE1B,+BAFiB,SAAS,6CAElB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,SAAS;;WAkBxB,cAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,aAAO,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B,aAAO,OAAO,CAAC;KAChB;;;SAjBQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,KAAK,IAAI,CAAC,IAAI,kBAAiB,KAAK,CAAC,EAAE;AACzC,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;OAC5E;KACF;;;SAhBkB,SAAS;;;qBAAT,SAAS","file":"lib/MaxLength.js","sourcesContent":["import StringKeyword from './StringKeyword';\n\nexport default class MaxLength extends StringKeyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value >= 0 && Number.isInteger(value)) {\n      this._value = value;\n    } else {\n      throw new Error('value must be an integer and greater than or equal to 0');\n    }\n  }\n\n  json(context) {\n    context = context || {};\n\n    context.maxLength = this.value;\n    return context;\n  }\n}"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}