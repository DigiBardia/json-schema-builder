{"version":3,"sources":["lib/Properties.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;uBAAoB,WAAW;;;;sBACZ,UAAU;;;;8BACH,iBAAiB;;;;IAGtB,UAAU;YAAV,UAAU;;AAClB,WADQ,UAAU,CACjB,KAAK,EAAE;0BADA,UAAU;;AAE3B,+BAFiB,UAAU,6CAEnB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,UAAU;;WAkB1B,aAAC,IAAI,EAAE,KAAK,EAAE;;;AACf,UAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;AAC3B,qBAAY,IAAI,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AAC/B,gBAAK,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SAC1B,CAAC,CAAC;AACH,eAAO;OACR;;AAGD,UAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC;OAChC,MAAM;AACL,YAAM,IAAI,GAAG,EAAE,CAAC;AAChB,YAAI,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC;AACzB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;OACnB;KACF;;;WAEG,cAAC,OAAO,EAAE;;;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,UAAI,IAAI,CAAC,KAAK,EAAE;;AACd,cAAM,KAAK,GAAG,EAAE,CAAC;AACjB,uBAAY,OAAK,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AACrC,gBAAI,GAAG,GAAG,EAAE,CAAC;AACb,gBAAM,KAAK,GAAG,OAAK,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9B,iBAAK,CAAC,GAAG,CAAC,GAAG,AAAC,KAAK,gCAAmB,GAChC,OAAK,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GACzB,OAAK,KAAK,CAAC,GAAG,CAAC,CAAC;WACvB,CAAC,CAAC;;AAEH,iBAAO,CAAC,UAAU,GAAG,KAAK,CAAC;;OAC5B;;AAED,aAAO,OAAO,CAAC;KAChB;;;SA/CQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;AAC5B,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;OAC5C;KACF;;;SAhBkB,UAAU;;;qBAAV,UAAU","file":"lib/Properties.js","sourcesContent":["import Builder from './Builder';\nimport Schema from './Schema';\nimport ObjectKeyword from './ObjectKeyword';\n\n\nexport default class Properties extends ObjectKeyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (typeof value == 'object') {\n      this._value = value;\n    } else {\n      throw new Error('value must be an object');\n    }\n  }\n\n  add(name, value) {\n    if (typeof name == 'object') {\n      Object.keys(name).forEach(key => {\n        this.add(key, name[key]);\n      });\n      return;\n    }\n\n\n    if (this.value) {\n      this.value[name] = value || {};\n    } else {\n      const prop = {};\n      prop[name] = value || {};\n      this.value = prop;\n    }\n  }\n\n  json(context) {\n    context = context || {};\n\n    if (this.value) {\n      const props = {};\n      Object.keys(this.value).forEach(key => {\n        let ctx = {};\n        const value = this.value[key];\n        props[key] = (value instanceof Builder)\n            ? this.value[key].json(ctx)\n            : this.value[key];\n      });\n\n      context.properties = props;\n    }\n\n    return context;\n  }\n}\n"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}