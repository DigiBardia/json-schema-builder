{"version":3,"sources":["lib/Dependencies.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;8BAA0B,iBAAiB;;;;uBACvB,WAAW;;;;sBACZ,UAAU;;;;sBACR,QAAQ;;IAER,YAAY;YAAZ,YAAY;;AACpB,WADQ,YAAY,CACnB,KAAK,EAAE;0BADA,YAAY;;AAE7B,+BAFiB,YAAY,6CAErB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,YAAY;;WAuC3B,cAAC,OAAO,EAAE;;;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,UAAI,IAAI,CAAC,KAAK,EAAE;;AACd,cAAM,KAAK,GAAG,EAAE,CAAC;AACjB,uBAAY,MAAK,KAAK,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;AACrC,gBAAI,GAAG,GAAG,EAAE,CAAC;AACb,gBAAM,KAAK,GAAG,MAAK,KAAK,CAAC,GAAG,CAAC,CAAC;AAC9B,iBAAK,CAAC,GAAG,CAAC,GAAG,AAAC,KAAK,gCAAmB,GAChC,MAAK,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GACzB,MAAK,KAAK,CAAC,GAAG,CAAC,CAAC;WACvB,CAAC,CAAC;;AAEH,iBAAO,CAAC,YAAY,GAAG,KAAK,CAAC;;OAC9B;;AAED,aAAO,OAAO,CAAC;KAChB;;;SAlDQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,OAAO,KAAK,IAAI,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACrD,aAAK,IAAI,IAAI,IAAI,KAAK,EAAE;AACtB,cAAI,AAAC,OAAO,IAAI,IAAI,QAAQ,IAAI,EAAE,IAAI,gCAAkB,AAAC,IAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAClF,kBAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;WACpE,MACI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AAC5B,gBAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAChB,oBAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;aACtD;;AAED,gBAAI,kBAAK,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;AACpC,oBAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;aAC/C;;AAED,gBAAI,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;AACnB,kBAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,sBAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;eAC7C;aACF,CAAC,CAAC;WACJ;SACF;OACF,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;OAC5C;;AAED,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;SArCkB,YAAY;;;qBAAZ,YAAY","file":"lib/Dependencies.js","sourcesContent":["import ObjectKeyword from './ObjectKeyword';\nimport Builder from './Builder';\nimport Schema from './Schema';\nimport { uniq } from 'lodash';\n\nexport default class Dependencies extends ObjectKeyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (typeof value == 'object' && !Array.isArray(value)) {\n      for (let prop in value) {\n        if ((typeof prop == 'object' && !(prop instanceof Schema)) && !Array.isArray(prop)) {\n          throw new Error('value property must be array or Schema instance');\n        }\n        else if (Array.isArray(prop)) {\n          if (!prop.length) {\n            throw new Error('array must have at least one item');\n          }\n\n          if (uniq(prop).length != prop.length) {\n            throw new Error('array items must be unique');\n          }\n\n          prop.forEach(elem => {\n            if (typeof elem !== 'string') {\n              throw new Error('array items must strings');\n            }\n          });\n        }\n      }\n    } else {\n      throw new Error('value must be an object');\n    }\n\n    this._value = value;\n  }\n\n  json(context) {\n    context = context || {};\n\n    if (this.value) {\n      const props = {};\n      Object.keys(this.value).forEach(key => {\n        let ctx = {};\n        const value = this.value[key];\n        props[key] = (value instanceof Builder)\n            ? this.value[key].json(ctx)\n            : this.value[key];\n      });\n\n      context.dependencies = props;\n    }\n\n    return context;\n  }\n}"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}