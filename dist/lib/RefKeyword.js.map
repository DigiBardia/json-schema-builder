{"version":3,"sources":["lib/RefKeyword.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;wBAAoB,WAAW;;;;IAEV,UAAU;YAAV,UAAU;;AAClB,WADQ,UAAU,CACjB,KAAK,EAAE;0BADA,UAAU;;AAE3B,+BAFiB,UAAU,6CAEnB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,UAAU;;WAmBzB,cAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,aAAO,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AAC1B,aAAO,OAAO,CAAC;KAChB;;;SAjBQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;;AAE5B,cAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;OACrD;;AAED,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;SAjBkB,UAAU;;;qBAAV,UAAU","file":"lib/RefKeyword.js","sourcesContent":["import Keyword from './Keyword';\n\nexport default class RefKeyword extends Keyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (typeof value != 'string') {\n      // TODO better validation\n      throw new Error('value must be a valid uri string');\n    }\n\n    this._value = value;\n  }\n\n  json(context) {\n    context = context || {};\n    context.$ref = this.value;\n    return context;\n  }\n}\n"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}