{"version":3,"sources":["lib/MaxItems.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;6BAAyB,gBAAgB;;;;IAEpB,QAAQ;YAAR,QAAQ;;AAChB,WADQ,QAAQ,CACf,KAAK,EAAE;0BADA,QAAQ;;AAEzB,+BAFiB,QAAQ,6CAEjB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,QAAQ;;WAkBvB,cAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,aAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAC9B,aAAO,OAAO,CAAC;KAChB;;;SAjBQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,KAAK,IAAI,CAAC,IAAI,kBAAiB,KAAK,CAAC,EAAE;AACzC,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAC;OAC5E;KACF;;;SAhBkB,QAAQ;;;qBAAR,QAAQ","file":"lib/MaxItems.js","sourcesContent":["import ArrayKeyword from './ArrayKeyword';\n\nexport default class MaxItems extends ArrayKeyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value >= 0 && Number.isInteger(value)) {\n      this._value = value;\n    } else {\n      throw new Error('value must be an integer and greater than or equal to 0');\n    }\n  }\n\n  json(context) {\n    context = context || {};\n\n    context.maxItems = this.value;\n    return context;\n  }\n}"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}