{"version":3,"sources":["lib/Pattern.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;8BAA0B,iBAAiB;;;;IAEtB,OAAO;YAAP,OAAO;;AACf,WADQ,OAAO,CACd,KAAK,EAAE;0BADA,OAAO;;AAExB,+BAFiB,OAAO,6CAEhB;AACR,QAAI,CAAC,KAAK,GAAG,KAAK,CAAC;GACpB;;eAJkB,OAAO;;WAkBtB,cAAC,OAAO,EAAE;AACZ,aAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,aAAO,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,aAAO,OAAO,CAAC;KAChB;;;SAjBQ,eAAG;AACV,aAAO,IAAI,CAAC,MAAM,CAAC;KACpB;SAEQ,aAAC,KAAK,EAAE;AACf,UAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB,MAAM;AACL,cAAM,IAAI,KAAK,CAAC,iEAAiE,CAAC,CAAC;OACpF;KACF;;;SAhBkB,OAAO;;;qBAAP,OAAO","file":"lib/Pattern.js","sourcesContent":["import StringKeyword from './StringKeyword';\n\nexport default class Pattern extends StringKeyword {\n  constructor(value) {\n    super();\n    this.value = value;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (typeof value === 'string') {\n      this._value = value;\n    } else {\n      throw new Error('value must be a string and should be a valid regular expression');\n    }\n  }\n\n  json(context) {\n    context = context || {};\n\n    context.pattern = this.value;\n    return context;\n  }\n}"],"sourceRoot":"/Users/bardiakhosravi/Projects/json-schema-builder/src"}